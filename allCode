(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
exports.__esModule = true;
var poncon_1 = require("../../src/poncon");
var poncon = new poncon_1["default"]();
poncon.setPageList(['home', 'about']);
poncon.start();
},{"../../src/poncon":2}],2:[function(require,module,exports){
"use strict";
exports.__esModule = true;
/**
 * @author 欧阳鹏
 * https://apee.top
 */
var Poncon = /** @class */ (function () {
function Poncon() {
this.pages = {};
this.pageNames = []; // 页面列表
}
/**
* 切换页面显示
* @param target 页面标识
*/
Poncon.prototype.changeView = function (target) {
if (!target) {
return;
}
document.querySelectorAll('.poncon-page').forEach(function (dom) {
dom.style.display = 'none';
});
var dom = document.querySelector(".poncon-".concat(target));
dom.style.display = '';
};
/**
* 设置页面名称列表
* @param pageNames 页面名称列表
*/
Poncon.prototype.setPageList = function (pageNames) {
var _this_1 = this;
pageNames.forEach(function (target) {
var dom = document.querySelector(".poncon-".concat(target));
_this_1.pages[target] = {
dom: dom,
event: (function () { })
};
});
this.pageNames = pageNames;
};
/**
* 配置页面
* @param target 页面标识
* @param func 页面载入事件
*/
Poncon.prototype.setPage = function (target, func) {
if (!target) {
return;
}
var dom = document.querySelector(".poncon-".concat(target));
this.pages[target] = {
dom: dom,
event: func || (function () { })
};
};
/**
* 开启路由系统
*/
Poncon.prototype.start = function () {
var _this = this;
window.addEventListener('hashchange', function (event) {
var hash = new URL(event.newURL).hash;
_this.loadTarget(hash);
});
this.loadTarget();
};
/**
* 切换页面并执行页面事件
* @param hash 页面标识
*/
Poncon.prototype.loadTarget = function (hash) {
var target = this.getTarget(hash);
var dom = this.getDom(target);
var args = this.getArgs(hash);
this.changeView(target);
this.pages[target].event(target, dom, args);
};
/**
* 获取页面参数列表
* @param hash 网址Hash
* @returns 页面参数列表
*/
Poncon.prototype.getArgs = function (hash) {
var strs = (hash || location.hash).split('/');
if (strs.length < 3) {
return [];
}
return strs.slice(2);
};
/**
* 获取当前页面标识, 支持自动矫正
* @param hash 网址hash
* @returns 页面标识
*/
Poncon.prototype.getTarget = function (hash) {
var strs = (hash || location.hash).split('/');
var target = strs[1] || '';
// target不合法或者不在白名单
if (target.search(/^\w+$/) != 0 || this.pageNames.indexOf(target) == -1) {
history.replaceState({}, '', "".concat(location.pathname));
return 'home';
}
return target;
};
/**
* 获取页面DOM
* @param target 页面标识
* @returns 页面DOM元素
*/
Poncon.prototype.getDom = function (target) {
return document.querySelector(".poncon-".concat(target));
};
return Poncon;
}());
exports["default"] = Poncon;
},{}]},{},[1]);
<!DOCTYPE html>
<html lang="zh-CN">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Typescript + Browserify 示例</title>
<style>
.page {
padding: 30px;
margin: 10px;
border: 1px solid #666666;
background-color: blanchedalmond;
border-radius: 15px;
}
.page h1 {
margin-top: 0px;
margin-bottom: 40px;
font-size: 40px;
}
.page a.active {
color: white;
background-color: dimgray;
}
.page a {
font-size: 30px;
padding: 10px 20px;
border-radius: 10px;
margin-right: 20px;
cursor: pointer;
background-color: cornsilk;
text-decoration: none;
color: black;
}
</style>
</head>
<body>
<h1>Typescript + Browserify 示例</h1>
<div class="poncon-home poncon-page" style="display: none;">
<div class="page">
<h1>这里是主页</h1>
<a href="#" class="active">#/home</a>
<a href="#/about">#/about</a>
</div>
</div>
<div class="poncon-about poncon-page" style="display: none;">
<div class="page">
<h1>这里是关于页</h1>
<a href="#">#/home</a>
<a href="#/about" class="active">#/about</a>
</div>
</div>
<script src="./bundle.min.js"></script>
</body>
</html>
<!DOCTYPE html>
<html lang="zh-CN">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>script 标签直接引入示例</title>
<style>
.page {
padding: 30px;
margin: 10px;
border: 1px solid #666666;
background-color: blanchedalmond;
border-radius: 15px;
}
.page h1 {
margin-top: 0px;
margin-bottom: 40px;
font-size: 40px;
}
.page a.active {
color: white;
background-color: dimgray;
}
.page a {
font-size: 30px;
padding: 10px 20px;
border-radius: 10px;
margin-right: 20px;
cursor: pointer;
background-color: cornsilk;
text-decoration: none;
color: black;
}
</style>
</head>
<body>
<h1>script 标签直接引入示例</h1>
<div class="poncon-home poncon-page" style="display: none;">
<div class="page">
<h1>这里是主页</h1>
<a href="#" class="active">#/home</a>
<a href="#/about">#/about</a>
</div>
</div>
<div class="poncon-about poncon-page" style="display: none;">
<div class="page">
<h1>这里是关于页</h1>
<a href="#">#/home</a>
<a href="#/about" class="active">#/about</a>
</div>
</div>
<script src="../../dist/poncon.min.js"></script>
<script>
const poncon = new Poncon()
poncon.setPageList(['home', 'about'])
poncon.start()
</script>
</body>
</html>
const { execSync } = require('child_process')
const fs = require('fs')
// 编译 TS
execSync('tsc')
// 读取编译后的 JS
const jsCodeStr = fs.readFileSync('src/poncon.js').toString()
// 去除模块化代码
const newCodeStr = jsCodeStr.replace(/^exports[.\[].*/gm, '')
// 写入新的 JS 文件
if (!fs.existsSync('dist')) {
fs.mkdirSync('dist')
}
fs.writeFileSync('dist/poncon.js', newCodeStr)
// UglifyJS 处理
execSync('uglifyjs dist/poncon.js -m -c -o dist/poncon.min.js')
"use strict";var Poncon=function(){function t(){this.pages={},this.pageNames=[]}return t.prototype.changeView=function(t){t&&(document.querySelectorAll(".poncon-page").forEach(function(t){t.style.display="none"}),document.querySelector(".poncon-".concat(t)).style.display="")},t.prototype.setPageList=function(t){var n=this;t.forEach(function(t){var e=document.querySelector(".poncon-".concat(t));n.pages[t]={dom:e,event:function(){},data:{}}}),this.pageNames=t},t.prototype.setPage=function(t,e){t&&(this.pages[t].event=e||function(){})},t.prototype.start=function(){var e=this;window.addEventListener("hashchange",function(t){t=new URL(t.newURL).hash;e.loadTarget(t)}),this.loadTarget()},t.prototype.loadTarget=function(t){var e=this.getTarget(t),n=this.getDom(e),t=this.getArgs(t);this.changeView(e),this.pages[e].event(n,t,this.pages[e].data)},t.prototype.getArgs=function(t){t=(t||location.hash).split("/");return t.length<3?[]:t.slice(2)},t.prototype.getTarget=function(t){t=(t||location.hash).split("/")[1]||"";return 0!=t.search(/^\w+$/)||-1==this.pageNames.indexOf(t)?(history.replaceState({},"","".concat(location.pathname)),"home"):t},t.prototype.getDom=function(t){return document.querySelector(".poncon-".concat(t))},t}();
"use strict";
exports.__esModule = true;
/**
 * @author 欧阳鹏
 * https://apee.top
 */
var Poncon = /** @class */ (function () {
function Poncon() {
this.pages = {};
this.pageNames = []; // 页面列表
}
/**
* 切换页面显示
* @param target 页面标识
*/
Poncon.prototype.changeView = function (target) {
if (!target) {
return;
}
document.querySelectorAll('.poncon-page').forEach(function (dom) {
dom.style.display = 'none';
});
var dom = document.querySelector(".poncon-".concat(target));
dom.style.display = '';
};
/**
* 设置页面名称列表
* @param pageNames 页面名称列表
*/
Poncon.prototype.setPageList = function (pageNames) {
var _this_1 = this;
pageNames.forEach(function (target) {
var dom = document.querySelector(".poncon-".concat(target));
_this_1.pages[target] = {
dom: dom,
event: (function () { }),
data: {}
};
});
this.pageNames = pageNames;
};
/**
* 配置页面
* @param target 页面标识
* @param func 页面载入事件
*/
Poncon.prototype.setPage = function (target, func) {
if (!target) {
return;
}
this.pages[target]['event'] = func || (function () { });
};
/**
* 开启路由系统
*/
Poncon.prototype.start = function () {
var _this = this;
window.addEventListener('hashchange', function (event) {
var hash = new URL(event.newURL).hash;
_this.loadTarget(hash);
});
this.loadTarget();
};
/**
* 切换页面并执行页面事件
* @param hash 页面标识
*/
Poncon.prototype.loadTarget = function (hash) {
var target = this.getTarget(hash);
var dom = this.getDom(target);
var args = this.getArgs(hash);
this.changeView(target);
this.pages[target].event(dom, args, this.pages[target].data);
};
/**
* 获取页面参数列表
* @param hash 网址Hash
* @returns 页面参数列表
*/
Poncon.prototype.getArgs = function (hash) {
var strs = (hash || location.hash).split('/');
if (strs.length < 3) {
return [];
}
return strs.slice(2);
};
/**
* 获取当前页面标识, 支持自动矫正
* @param hash 网址hash
* @returns 页面标识
*/
Poncon.prototype.getTarget = function (hash) {
var strs = (hash || location.hash).split('/');
var target = strs[1] || '';
// target不合法或者不在白名单
if (target.search(/^\w+$/) != 0 || this.pageNames.indexOf(target) == -1) {
history.replaceState({}, '', "".concat(location.pathname));
return 'home';
}
return target;
};
/**
* 获取页面DOM
* @param target 页面标识
* @returns 页面DOM元素
*/
Poncon.prototype.getDom = function (target) {
return document.querySelector(".poncon-".concat(target));
};
return Poncon;
}());
exports["default"] = Poncon;
"use strict";
/**
 * @author 欧阳鹏
 * https://apee.top
 */
var Poncon = /** @class */ (function () {
function Poncon() {
this.pages = {};
this.pageNames = []; // 页面列表
}
/**
* 切换页面显示
* @param target 页面标识
*/
Poncon.prototype.changeView = function (target) {
if (!target) {
return;
}
document.querySelectorAll('.poncon-page').forEach(function (dom) {
dom.style.display = 'none';
});
var dom = document.querySelector(".poncon-".concat(target));
dom.style.display = '';
};
/**
* 设置页面名称列表
* @param pageNames 页面名称列表
*/
Poncon.prototype.setPageList = function (pageNames) {
var _this_1 = this;
pageNames.forEach(function (target) {
var dom = document.querySelector(".poncon-".concat(target));
_this_1.pages[target] = {
dom: dom,
event: (function () { }),
data: {}
};
});
this.pageNames = pageNames;
};
/**
* 配置页面
* @param target 页面标识
* @param func 页面载入事件
*/
Poncon.prototype.setPage = function (target, func) {
if (!target) {
return;
}
this.pages[target]['event'] = func || (function () { });
};
/**
* 开启路由系统
*/
Poncon.prototype.start = function () {
var _this = this;
window.addEventListener('hashchange', function (event) {
var hash = new URL(event.newURL).hash;
_this.loadTarget(hash);
});
this.loadTarget();
};
/**
* 切换页面并执行页面事件
* @param hash 页面标识
*/
Poncon.prototype.loadTarget = function (hash) {
var target = this.getTarget(hash);
var dom = this.getDom(target);
var args = this.getArgs(hash);
this.changeView(target);
this.pages[target].event(dom, args, this.pages[target].data);
};
/**
* 获取页面参数列表
* @param hash 网址Hash
* @returns 页面参数列表
*/
Poncon.prototype.getArgs = function (hash) {
var strs = (hash || location.hash).split('/');
if (strs.length < 3) {
return [];
}
return strs.slice(2);
};
/**
* 获取当前页面标识, 支持自动矫正
* @param hash 网址hash
* @returns 页面标识
*/
Poncon.prototype.getTarget = function (hash) {
var strs = (hash || location.hash).split('/');
var target = strs[1] || '';
// target不合法或者不在白名单
if (target.search(/^\w+$/) != 0 || this.pageNames.indexOf(target) == -1) {
history.replaceState({}, '', "".concat(location.pathname));
return 'home';
}
return target;
};
/**
* 获取页面DOM
* @param target 页面标识
* @returns 页面DOM元素
*/
Poncon.prototype.getDom = function (target) {
return document.querySelector(".poncon-".concat(target));
};
return Poncon;
}());
!function n(r,c,a){function i(e,t){if(!c[e]){if(!r[e]){var o="function"==typeof require&&require;if(!t&&o)return o(e,!0);if(s)return s(e,!0);throw(t=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",t}o=c[e]={exports:{}},r[e][0].call(o.exports,function(t){return i(r[e][1][t]||t)},o,o.exports,n,r,c,a)}return c[e].exports}for(var s="function"==typeof require&&require,t=0;t<a.length;t++)i(a[t]);return i}({1:[function(t,e,o){const n=t("../../src/poncon"),r=new n.default;r.setPageList(["home","about"]),r.start()},{"../../src/poncon":2}],2:[function(t,e,o){"use strict";function n(){this.pages={},this.pageNames=[]}o.__esModule=!0,n.prototype.changeView=function(t){t&&(document.querySelectorAll(".poncon-page").forEach(function(t){t.style.display="none"}),document.querySelector(".poncon-".concat(t)).style.display="")},n.prototype.setPageList=function(t){var o=this;t.forEach(function(t){var e=document.querySelector(".poncon-".concat(t));o.pages[t]={dom:e,event:function(){}}}),this.pageNames=t},n.prototype.setPage=function(t,e){var o;t&&(o=document.querySelector(".poncon-".concat(t)),this.pages[t]={dom:o,event:e||function(){}})},n.prototype.start=function(){var e=this;window.addEventListener("hashchange",function(t){t=new URL(t.newURL).hash;e.loadTarget(t)}),this.loadTarget()},n.prototype.loadTarget=function(t){var e=this.getTarget(t),o=this.getDom(e),t=this.getArgs(t);this.changeView(e),this.pages[e].event(e,o,t)},n.prototype.getArgs=function(t){t=(t||location.hash).split("/");return t.length<3?[]:t.slice(2)},n.prototype.getTarget=function(t){t=(t||location.hash).split("/")[1]||"";return 0!=t.search(/^\w+$/)||-1==this.pageNames.indexOf(t)?(history.replaceState({},"","".concat(location.pathname)),"home"):t},n.prototype.getDom=function(t){return document.querySelector(".poncon-".concat(t))},o.default=n},{}]},{},[1]);
"use strict";
exports.__esModule = true;
var poncon_1 = require("../../src/poncon");
var poncon = new poncon_1["default"]();
poncon.setPageList(['home', 'about']);
poncon.start();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
const ponconjs = require('../../src/poncon')
const poncon = new ponconjs.default()
poncon.setPageList(['home', 'about'])
poncon.start()
},{"../../src/poncon":2}],2:[function(require,module,exports){
"use strict";
exports.__esModule = true;
/**
 * @author 欧阳鹏
 * https://apee.top
 */
var Poncon = /** @class */ (function () {
function Poncon() {
this.pages = {};
this.pageNames = []; // 页面列表
}
/**
* 切换页面显示
* @param target 页面标识
*/
Poncon.prototype.changeView = function (target) {
if (!target) {
return;
}
document.querySelectorAll('.poncon-page').forEach(function (dom) {
dom.style.display = 'none';
});
var dom = document.querySelector(".poncon-".concat(target));
dom.style.display = '';
};
/**
* 设置页面名称列表
* @param pageNames 页面名称列表
*/
Poncon.prototype.setPageList = function (pageNames) {
var _this_1 = this;
pageNames.forEach(function (target) {
var dom = document.querySelector(".poncon-".concat(target));
_this_1.pages[target] = {
dom: dom,
event: (function () { })
};
});
this.pageNames = pageNames;
};
/**
* 配置页面
* @param target 页面标识
* @param func 页面载入事件
*/
Poncon.prototype.setPage = function (target, func) {
if (!target) {
return;
}
var dom = document.querySelector(".poncon-".concat(target));
this.pages[target] = {
dom: dom,
event: func || (function () { })
};
};
/**
* 开启路由系统
*/
Poncon.prototype.start = function () {
var _this = this;
window.addEventListener('hashchange', function (event) {
var hash = new URL(event.newURL).hash;
_this.loadTarget(hash);
});
this.loadTarget();
};
/**
* 切换页面并执行页面事件
* @param hash 页面标识
*/
Poncon.prototype.loadTarget = function (hash) {
var target = this.getTarget(hash);
var dom = this.getDom(target);
var args = this.getArgs(hash);
this.changeView(target);
this.pages[target].event(target, dom, args);
};
/**
* 获取页面参数列表
* @param hash 网址Hash
* @returns 页面参数列表
*/
Poncon.prototype.getArgs = function (hash) {
var strs = (hash || location.hash).split('/');
if (strs.length < 3) {
return [];
}
return strs.slice(2);
};
/**
* 获取当前页面标识, 支持自动矫正
* @param hash 网址hash
* @returns 页面标识
*/
Poncon.prototype.getTarget = function (hash) {
var strs = (hash || location.hash).split('/');
var target = strs[1] || '';
// target不合法或者不在白名单
if (target.search(/^\w+$/) != 0 || this.pageNames.indexOf(target) == -1) {
history.replaceState({}, '', "".concat(location.pathname));
return 'home';
}
return target;
};
/**
* 获取页面DOM
* @param target 页面标识
* @returns 页面DOM元素
*/
Poncon.prototype.getDom = function (target) {
return document.querySelector(".poncon-".concat(target));
};
return Poncon;
}());
exports["default"] = Poncon;
},{}]},{},[1]);
!function n(r,c,a){function i(e,t){if(!c[e]){if(!r[e]){var o="function"==typeof require&&require;if(!t&&o)return o(e,!0);if(s)return s(e,!0);throw(t=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",t}o=c[e]={exports:{}},r[e][0].call(o.exports,function(t){return i(r[e][1][t]||t)},o,o.exports,n,r,c,a)}return c[e].exports}for(var s="function"==typeof require&&require,t=0;t<a.length;t++)i(a[t]);return i}({1:[function(t,e,o){"use strict";o.__esModule=!0;o=new(t("../../src/poncon").default);o.setPageList(["home","about"]),o.start()},{"../../src/poncon":2}],2:[function(t,e,o){"use strict";function n(){this.pages={},this.pageNames=[]}o.__esModule=!0,n.prototype.changeView=function(t){t&&(document.querySelectorAll(".poncon-page").forEach(function(t){t.style.display="none"}),document.querySelector(".poncon-".concat(t)).style.display="")},n.prototype.setPageList=function(t){var o=this;t.forEach(function(t){var e=document.querySelector(".poncon-".concat(t));o.pages[t]={dom:e,event:function(){}}}),this.pageNames=t},n.prototype.setPage=function(t,e){var o;t&&(o=document.querySelector(".poncon-".concat(t)),this.pages[t]={dom:o,event:e||function(){}})},n.prototype.start=function(){var e=this;window.addEventListener("hashchange",function(t){t=new URL(t.newURL).hash;e.loadTarget(t)}),this.loadTarget()},n.prototype.loadTarget=function(t){var e=this.getTarget(t),o=this.getDom(e),t=this.getArgs(t);this.changeView(e),this.pages[e].event(e,o,t)},n.prototype.getArgs=function(t){t=(t||location.hash).split("/");return t.length<3?[]:t.slice(2)},n.prototype.getTarget=function(t){t=(t||location.hash).split("/")[1]||"";return 0!=t.search(/^\w+$/)||-1==this.pageNames.indexOf(t)?(history.replaceState({},"","".concat(location.pathname)),"home"):t},n.prototype.getDom=function(t){return document.querySelector(".poncon-".concat(t))},o.default=n},{}]},{},[1]);
<!DOCTYPE html>
<html lang="zh-CN">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>路由控制系统</title>
<script src="./dist/poncon.min.js"></script>
</head>
<body>
<div class="poncon-home poncon-page">
主页
</div>
<div class="poncon-about poncon-page">
关于
</div>
<script>
var poncon = new Poncon()
poncon.setPageList(['home', 'about'])
poncon.setPage('home', function (target, dom, args) {
console.log(target, dom, args)
})
poncon.setPage('about', function (target, dom, args) {
console.log(target, dom, args)
})
poncon.start()
</script>
</body>
</html>
const ponconjs = require('../../src/poncon')
const poncon = new ponconjs.default()
poncon.setPageList(['home', 'about'])
poncon.start()
<!DOCTYPE html>
<html lang="zh-CN">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Browseriy 示例</title>
<style>
.page {
padding: 30px;
margin: 10px;
border: 1px solid #666666;
background-color: blanchedalmond;
border-radius: 15px;
}
.page h1 {
margin-top: 0px;
margin-bottom: 40px;
font-size: 40px;
}
.page a.active {
color: white;
background-color: dimgray;
}
.page a {
font-size: 30px;
padding: 10px 20px;
border-radius: 10px;
margin-right: 20px;
cursor: pointer;
background-color: cornsilk;
text-decoration: none;
color: black;
}
</style>
</head>
<body>
<h1>Browseriy 示例</h1>
<div class="poncon-home poncon-page" style="display: none;">
<div class="page">
<h1>这里是主页</h1>
<a href="#" class="active">#/home</a>
<a href="#/about">#/about</a>
</div>
</div>
<div class="poncon-about poncon-page" style="display: none;">
<div class="page">
<h1>这里是关于页</h1>
<a href="#">#/home</a>
<a href="#/about" class="active">#/about</a>
</div>
</div>
<script src="./bundle.min.js"></script>
</body>
</html>
